package qs.classhelper.dao;

import java.util.List;

import qs.classhelper.entity.TbTeacher;
import qs.classhelper.entity.TbTeacherInfos;

public interface TbTeacherMapper {
	
	
	/**
	 * 查询最新添加的教员
	 * @return
	 */
	TbTeacher getNewTeacher();
	
	/**
	 * 获取所有的教员以及信息
	 * @return
	 */
	List<TbTeacherInfos> getAllTeachersInfos();
	
	/**
	 * 多项删除
	 * @param 传入teacherids数组
	 * @return
	 */
	int delTeachers(String[] teacherids);
	
	/**
	 * 查询所有的教员
	 * @return
	 */
	List<TbTeacher> getAllTeacher();
	
	
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_teacher
     *
     * @mbg.generated Fri Jan 19 00:18:10 CST 2018
     */
	/**
	 * 删除单条
	 * @param teacherid
	 * @return
	 */
    int deleteByPrimaryKey(Integer teacherid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_teacher
     *
     * @mbg.generated Fri Jan 19 00:18:10 CST 2018
     */
    int insert(TbTeacher record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_teacher
     *
     * @mbg.generated Fri Jan 19 00:18:10 CST 2018
     */
    int insertSelective(TbTeacher record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_teacher
     *
     * @mbg.generated Fri Jan 19 00:18:10 CST 2018
     */
    TbTeacher selectByPrimaryKey(Integer teacherid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_teacher
     *
     * @mbg.generated Fri Jan 19 00:18:10 CST 2018
     */
    int updateByPrimaryKeySelective(TbTeacher record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_teacher
     *
     * @mbg.generated Fri Jan 19 00:18:10 CST 2018
     */
    int updateByPrimaryKey(TbTeacher record);
   
    TbTeacher getTbTeacher(String teacherName);
    
    
    /***
     * @author wangbo
     * 根据班级查对应的老师姓名
     */
     List<TbTeacher> getTeacherByClass(String name);
     
     /**
      * @author wangbo
      * 根据老师姓名查老师职位
      */
     int getPositionByName(String teachername);
   //显示班主任教师方法
     public List<TbTeacher>  showteacher();
     //显示教员老师的方法
     public List<TbTeacher> showjy();
}